[z--z]
( ) - группы
(привет)(.*)

128
привет это я
[z--z]
[ ] - символьный класс
[а-я]+

128
сегодня 25 число

1. Здесь в символьную группу входят символы от "а" до "я" (кроме заглавных)
2. Символ + захватывает повтор симола, то есть любое русское слово.
3. Обычно требуется добавить букву "ё", вот так [а-яё]+
[z--z]
{ } - повторители
[а-я]{4}

128
сегодня 25 число

1. При захвате повторить символ диапазана ровно 4 раза
2. Далее смотрите варианты повторителей типа {4,7} - более 4 и менее 7
[z--z]
\ - экранирующий
\\
_
64
D:\Docum\File.au3

Экранирующий метасимвол заставляет воспринимать метасимволы как литерал.
Или другим языком - воспринимать спецсимволы как обычный текст.
\. - экранируем точку
\[ - экранируем квадратную скобку
\{ - экранируем фигурную скобку
\* - экранируем звёздочку
[z--z]
^ - начало текста
^text
_
64
text text text
[z--z]
$ - конец текста
text$
_
64
text text text
[z--z]
. - любой символ
.
_
64
text
text
[z--z]
| - символ выбора:  или
20(10|30)
20--
64
2010, 2020, 2030, 2040, 2120, 2130

Условие подразумевает только два числа 2010 или 2030
[z--z]
? - пред.символ может быть
20?
-
64
2010, 22, 2030, 24

Условие: заменить 2 или 20 на тире. В данном случае "?" определяет,
что предыдущий символ "0" может быть и может не быть. Или аналог повторителя {0,1}
[z--z]
* повтор, 0 и более раз
ив*
ив
64
привввет
приет

Здесь * - аналог повторителя {0,}
Повтор от нуля до бесконечности раз
[z--z]
+ повтор 1 и более раз
ив+
ив
64
привввет
приет

Здесь + аналог повторителя {1,}
Повтор от 1 до бесконечности раз
[z--z]
[^...] - исключение
[^3]
-
64
7654321

Заменить все символы кроме 3 на тире.
[z--z]
\n - ссылка на группу
(Docum)_(File)
\2_\1
64
Docum_File

То что в скобках является группой. При замене делаем ссылку на группу в виде \n
где n - номер группы. В шаблоне замены первая группа в конце, вторая в начале,
в результате текст поменялся местами.
Ссылка может быть в самом шаблоне поиска, например (Docum)\1 - это позволит
найти текст DocumDocum
[z--z]
$n - ссылка на группу
(Docum)_(File)
\2_\1
1088
Docum_File

Данный вариант записи ($1) позволяет делать ссылку только в шаблоне замены.
А вариант \1 позволяет делать ссылку как в шаблоне замены, так и в шаблоне поиска.
[z--z]
\r\n - перенос строки
\r\n
-
64
Docum
File

Также \R заменяет любой из символов \r\n
[z--z]
\t - табуляция
\t
-&-
64
Docum	File
[z--z]
\nnn - восмеричный код
\162\154
-
64
Perl Girl
[z--z]
\x{**} - шестнад. код
\x{72}\x{6C}
-
64
Perl Girl
Возможно написание \x72\x6C
[z--z]
\K - предпросмотр слева
пере\Kкод
-
64
недокод перекод
[z--z]
\G - поиск от начала
\Ga
-
64
aaa aaa
[z--z]
\d - десятичная цифра
\d
-
64
num435290aga
[z--z]
\D - не десятич. цифра
\D
-
64
num435290aga
[z--z]
\s - пробельные символы
\s
-
64
num	aga vot
drr
[z--z]
\S - не пробель. символы
\S
-
64
num	aga vot
drr
[z--z]
\w - любое слово
\w
-
64
13asd_, только для букв латинского алфавита
[z--z]
\W - любое не слово
\W
-
64
1 3 a s d _ d, только для букв латинского алфавита
[z--z]
\A - начало текста
\A
-
64
13asd_
13asd_
[z--z]
\z - конец текста
\z
-
64
13asd_
13asd_

[z--z]
\Z - конец текста и \n
\Z
-
64
13asd_
13asd_

[z--z]
\b - граница слова и не
\b
-
64
asd fgh hjk, только для букв латинского алфавита
[z--z]
\B - не граница слова
\B
-
64
asd fgh hjk    q    w    e, только для букв латинского алфавита
[z--z]
(?i) независимо от регистра
(?i)(Asd)
-
64
ASD
asd
Asd
aSD
только для букв латинского алфавита
[z--z]
(?-i) отменяет (?i)
(?i)(?-i)(Asd)
-
64
ASD
asd
Asd
aSD
только для букв латинского алфавита
[z--z]
(?m) - ^ и $ многостроч.
(?m)^.
-
64
В режиме мультистроки символы ^ и $ воспринимаются как начало и конец строки
По умолчанию ^ и $ воспринимаются как начало и конец текста, как если бы текст
был одной строкой.
В данном случае пример заменяет любой символ начала каждой строки на тире.
Без (?m) заменится только начало текста.
Символ конца строки LF, то есть макрос @LF
[z--z]
(?-m) отменяет (?m)
(?m)(?-m)^.
-
64
ASD
asd
Asd
aSD
[z--z]
(?s) . охватывает всё
(?s)(.*)
-
64
Символ точка (.) включает в себя символ \n (@LF), который по умолчанию не включен.
То есть (?s) воспринимает текст как одну строку, даже если он многострочный.
В противоположность (?m) воспринимает мультистроку, то есть воспринимает текст как
многострочный. Ну а разница в данном случае в символе переноса строки,
и в символах ^ и $ (начало и конец строки). В варианте одной строки (?s) символы ^ и $
определяют начало и конец текста.
Разрешается комбинировать (?ms), попробуйте манипулировать вариантами:
(?ms)^.*$
(?ms)^.*?$
где жадность может захватить конец строки.
[z--z]
(?-s) отменяет (?s)
(?s)(?-s)(.*)
-
64
ASD
asd
Asd
aSD
[z--z]
(?x) комментирование
(?x)( в + )(?#разрешено комментировать и вставлять пробелы)
в
64
привввет

Пробелами делают читабельность регулярного выражения, а при использовании
пробелы и комментарии игнорируются. По умолчанию пробел не игнорируется
и воспринимается как символ.
[z--z]
(?-x) отменяет (?x)
(?x)(?#разрешено комментировать и вставлять пробелы)(?-x)(в+)
в
64
привввет
[z--z]
(?U) инверт. жадность
(?U)(.*?)
-
64
привет
[z--z]
(?i:...) не завис от регистр
(?i:Asd)
-
64
ASD
asd
Asd
aSD
группа не зависящая от регистра
только для букв латинского алфавита
[z--z]
(?-i:...) завис от регистр
(?-i:Asd)
-
64
ASD
asd
Asd
aSD
группа зависящая от регистра
только для букв латинского алфавита
[z--z]
(?:...) исключить группу
(?:Docum)_(File)

128
Docum_File
[z--z]
(?=...) совпадение после
(Docum)_(?=File)
-
64
Docum_File
Docum_File
Docum_Fele
(?=текст) - группа исключена из поиска, но проверяет совпадение окончания
[z--z]
(?!...) не совпад. после
(Docum)_(?!File)
-
64
Docum_File
Docum_File
Docum_Fele
(?!текст) - группа исключена из поиска, но проверяет не совпадение окончания
[z--z]
(?<=...) совпад. начала
(?<=Docum)_(File)
-
64
Docum_File
Docum_File
Decum_File
(?<=текст) - группа исключена из поиска, но проверяет совпадение начала
[z--z]
(?<!...) не совпад. начала
(?<!Docum)_(File)
-
64
Docum_File
Docum_File
Decum_File
(?<!текст) - группа исключена из поиска, но проверяет не совпадение начала
[z--z]
{n} - повторить n раз
D{2}

64
Docum_DDDFile
[z--z]
{n,} повторить n и более
D{2,}

64
Docum_DDDFile
[z--z]
{n, m} повтор от n до m
D{0,2}

64
Docum_DDDFile
[z--z]
.*? - не жадный
.*?
-
64
Не жадный находит первый образец (в данном случае любой символ)
и считает что условие выполнено. Теперь проверте без знака ?, то есть
жадный. В этом случае несколько символов также удовлетворяют условию
поиска. Именно эта характеристика определяет жадность, то есть в первом
случае заменяем каждый символ на тире, во втором последовательность
любых символов заменяем на тире. Результат замены конечно же различный.
[z--z]
[[:upper:]] - классы
[[:upper:]]
-
64
ORient

Только для букв латинского алфавита. Для Ru используете шаблон [А-ЯЁ]
другие классы смотрите в справке.
Для инвертирования запись выглядит так [[:^upper:]] - все кроме заглавных. Но это захватывает не только строчные но и цифры и другие символы.
[z--z]
[[:xdigit:]] - шестнадцатеричное
[[:xdigit:]]{6}
-
64
FF0000 - красный, red
00FF00 - зелёный, green
0000FF - синий, blue
FA45EC
fa45ec
FX00FF - X не шестнадцатеричный символ
Тоже что [0-9A-Fa-f]
[z--z]
Поиск с условием
(?(?<=а)м|п)
-
64
мам,пап
[z--z]
Поиск с условием2
(а)?(?(1)м|п)
-
64
мам,пап
[z--z]
Атомарная группа
a(?>x*)xa
-
64
axxxa
Сверхжадный захватил все символы xxx и конечно последующий x уже не найден.
[z--z]
